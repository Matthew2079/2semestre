/* Irriga Vida - Projeto Integrador 2º Semestre ADS - Irrigador Automático*/

#include <LiquidCrystal.h> //INCLUSÃO DE BIBLIOTECA DO DISPLAY LCD 16x2

// LiquidCrystal(RS, E, D4, D5, D6, D7) - Declaração do Pinos do Display
LiquidCrystal lcd(9, 8, 4, 5, 6, 7); 

#include <Keypad.h> //INCLUSÃO DE BIBLIOTECA DO TECLADO MATRICIAL 4X4

const byte qtdLinhas = 4; //QUANTIDADE DE LINHAS DO TECLADO
const byte qtdColunas = 4; //QUANTIDADE DE COLUNAS DO TECLADO

/*//CONSTRUÇÃO DA MATRIZ DE CARACTERES
char matriz_teclas[qtdLinhas][qtdColunas] = {
  {'1','2','3','A'},
  {'4','5','6','B'},
  {'7','8','9','C'},
  {'*','0','#','D'}
};*/

//CONSTRUÇÃO DA MATRIZ DE CARACTERES
char matriz_teclas[qtdLinhas][qtdColunas]{
  {1,  2, 3,  12},
  {4,  5, 6,  13},
  {7,  8, 9,  14},
  {10, 16, 11, 15}
}; // Definição Matricial dos Botões do Teclado 4x4.

byte PinosqtdLinhas[qtdLinhas] = {22, 23, 24, 25}; //PINOS UTILIZADOS PELAS LINHAS
byte PinosqtdColunas[qtdColunas] = {26, 27, 28, 29}; //PINOS UTILIZADOS PELAS COLUNAS

//INICIALIZAÇÃO DO TECLADO
Keypad keyboard = Keypad( makeKeymap(matriz_teclas), PinosqtdLinhas, PinosqtdColunas, qtdLinhas, qtdColunas);
//Keypad keypad = Keypad( makeKeymap(keys), rowPins, colPins, ROWS, COLS );

int keypress; // Variável que armazena teclas digitadas ou lidas.
int ValAnalogIn; // Variável que armazena o valor do sensor.

//Definição dos pinos do Projeto
#define pinoAnalog A0 // Define o pino A0 como "pinoAnalog" - SENSOR DE UMIDADE
#define pino5V 10 // Define o pino 7 como "pino5V" - ALIMENTAÇÃO SENSOR
#define pinoRele 12 // Define o pino 8 como "pinoRele" - PINO DE ENTRADA DE SINAL MÓDULO RELE
#define pinoBuzzer 13 // Define o pino 11 como BUZZER - EFEITO SONORO

//Ciclo de Inicialização
void setup() { //Início do Setup.
  // put your setup code here, to run once:
 Serial.begin(9600); // Begin the Serial at 9600 Baud
 lcd.begin(16,2); // Inicializa o display LCD
 pinMode(pinoRele, OUTPUT); // define a porta motor como saída
 pinMode(pinoBuzzer, OUTPUT); // define a porta buzzer como saída
  
 lcd.setCursor(5, 0); // seta cursor no display coluna 5, linha 0
 lcd.print(" Fatec "); // printa texto
 lcd.setCursor(2, 1); // seta cursor no display coluna 2, linha 1
 lcd.print(" 18/06/2021 "); 
 delay(2000); // espera 2000ms ou 2s
 lcd.setCursor(2, 1); // seta cursor no display coluna 2, linha 1
 lcd.print(" Irriga Vida ");
 delay(1000); // espera 1000ms ou 1s
} // Término do Setup.

//Ciclo Principal
void loop() { // If loop principal
  // put your main code here, to run repeatedly:
  
 keypress = keyboard.getKey(); //Armazena o novo valor de key para testar as próximas condições.
 //key = keypad.getKey();
 
 /*if (keypress)
 { //SE ALGUMA TECLA FOR PRESSIONADA, FAZ
    Serial.print("Tecla pressionada : "); //IMPRIME O TEXTO NO MONITOR SERIAL
    Serial.println(keypress); //IMPRIME NO MONITOR SERIAL A TECLA PRESSIONADA
  }

}*/
        ValAnalogIn = analogRead(pinoAnalog); // Função de leitura do Pino Analógico e armazena em uma variável
        int Porcento = map(ValAnalogIn, 1023, 0, 0, 100); // Relaciona o valor analógico à porcentagem
 
        Serial.print(Porcento); // Imprime o valor em Porcento no monitor Serial
        Serial.println("%"); // Imprime o símbolo junto ao valor encontrado
  
          if (Porcento <= 80) // Se a porcentagem for menor ou igual à
            { // if sub1
              Serial.println("Irrigando..."); // Imprime a frase no monitor serial
              digitalWrite(pinoRele, HIGH); // Altera o estado do pinoRele para nível Alto
              digitalWrite(pinoBuzzer, HIGH); // Altera o valor para acionado
              delay (2000);
              lcd.clear();
              lcd.setCursor(6, 1);
              lcd.print(Porcento);
              lcd.print("%");
              lcd.setCursor(0, 0);
              lcd.print("....Irrigando...");
            } // if sub1
 
          else // Se não ...
            { // else1
               Serial.println("Planta Irrigada ..."); // Imprime a frase no monitor serial
               digitalWrite(pinoRele, LOW); // Altera o estado do pinoRele para nível Alto
               digitalWrite(pinoBuzzer, LOW); // Altera o valor para acionado
               delay (2000);
               lcd.clear();
               lcd.setCursor(6, 1);
               lcd.print(Porcento);
               lcd.print("%");
               lcd.setCursor(1, 0);
               lcd.print("Planta Irrigada");
            }// else1
    
            //delay (1000); // Estabelece o tempo de 1s para reinicializar a leitura*/
                            
          if (keypress==16)
            { // If keypress

              Serial.print("Tecla pressionada : "); //IMPRIME O TEXTO NO MONITOR SERIAL
              Serial.println(keypress); //IMPRIME NO MONITOR SERIAL A TECLA PRESSIONADA
              
              digitalWrite(pinoRele, LOW); // Altera o estado do pinoRele para nível Alto
              digitalWrite(pinoBuzzer, LOW); // Altera o valor para acionado
               
              lcd.clear();
              lcd.setCursor(3, 0);
              lcd.print("Manutencao");
              lcd.setCursor(3, 0);
              lcd.print("1-Dosadora");
              //delay(2000);
              lcd.setCursor(3, 1);
              lcd.print("2-Buzzer  ");
              //delay (2000);
              
              keypress=99;  // Atribui a variável key um valor fixo. 
              while (keypress<1 || keypress>2) // Enquanto selecionada Tecla 1 ou 2 for menor que as condições key=99, executa as linhas do mesmo.
                 {
                   keypress = keyboard.getKey(); //Armazena o novo valor de key para testar as próximas condições.
                   Serial.println(keypress);
                   delay (1000);
                 } 
         
              switch (keypress)
                   { // SWITCH keypress
                    
                      case 1:         
                           lcd.clear();
                           lcd.setCursor(0, 0);
                           lcd.print("Testando........");
                           lcd.setCursor(0, 1);
                           lcd.print("Dosadora........");
                           delay(2000);
                           digitalWrite(pinoRele,HIGH);
                           lcd.setCursor(0, 1);
                           lcd.print("....Aguarde....."); 
                           delay (5000);
                           digitalWrite(pinoRele,LOW);
                      break;

                      case 2:         
                           lcd.clear();
                           lcd.setCursor(0, 0);
                           lcd.print("Testando........");
                           lcd.setCursor(0, 1);
                           lcd.print("Buzzer..........");
                           delay(2000);
                           digitalWrite(pinoBuzzer,HIGH);
                           lcd.setCursor(0, 1);
                           lcd.print("....Aguarde....."); 
                           delay (5000);
                           digitalWrite(pinoBuzzer,LOW);
                      break;
         
                      defalut:
                      Serial.println(keypress);
                   } // SWITCH keypress
            } // If keypress
            
} // If loop principal Termino